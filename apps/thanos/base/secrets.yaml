apiVersion: v1
kind: ServiceAccount
metadata:
  name: thanos
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thanos
roleRef:
  kind: ClusterRole
  name: system:auth-delegator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: thanos
    namespace: monitoring
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: thanos
  namespace: monitoring
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
      path: "app"
      version: "v2"
      auth:
        kubernetes:
          # Path where the Kubernetes authentication backend is mounted in Vault
          mountPath: "kubernetes"
          # A required field containing the Vault Role to assume.
          role: "thanos"
          # Optional service account field containing the name
          # of a kubernetes ServiceAccount
          serviceAccountRef:
            name: "thanos"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: thanos
  namespace: monitoring  # Change to the appropriate namespace if needed
spec:
  refreshInterval: "15s"  # Time to sync from Vault
  secretStoreRef:
    name: thanos  # Change to your SecretStore name
    kind: SecretStore
  target:
    name: thanos-objstore-s3  # Name of the Kubernetes Secret to be created
    creationPolicy: Owner  # Create secret if it does not exist
  data:
    - secretKey: thanos.yaml
      remoteRef:
        key: app/data/thanos  # Path to the secret in Vault
        property: thanos.yaml  # Key in the Vault secret
    - secretKey: objstore.yml
      remoteRef:
        key: app/data/thanos
        property: objstore.yml
---
