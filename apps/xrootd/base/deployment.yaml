apiVersion: apps/v1
kind: Deployment
metadata:
  name: xrootd
  namespace: xrootd
spec:
  replicas: 1
  strategy:
    type: Recreate # Avoid RollingUpdate since the startup will be blocked by the volume mount/unmount
  selector:
    matchLabels:
      app: xrootd
  template:
    metadata:
      labels:
        app: xrootd
    spec:
      securityContext:
        # Ensure the group ownership is set to GID 1000
        # This GUID/UID must match in the initContainer script below,
        # and in the main container's securityContext.
        fsGroup: 1000
      initContainers:
      - name: install-certs
        image: almalinux/9-base
        command:
        - /bin/bash
        - -c
        - |
          # Install Grid certificates. These are not needed for XrdHttp, but populating
          # /etc/grid-security/certificates seem to be needed for xroot/1094 to operate.
          yum install -y https://repo.opensciencegrid.org/osg/3.6/osg-3.6-el9-release-latest.rpm
          yum install -y osg-ca-certs
          # Create and set permissions for necessary directories
          mkdir -p /var/spool/xrootd /run/xrootd
          chown -R 1000:1000 /var/spool/xrootd /run/xrootd /data
          # Kubernetes always symlinks secrets, and xrootd seems to check the file permissions.
          # Understandably, this results in xrootd checking the permissions of a link.
          # Kubernetes can not handle this scenario, so we have to copy the secrets during
          # the initialisation from the secret volume (tls-secrets) over to a directory (tls-certs).
          cp /etc/grid-security/tls-secrets/tls.crt /etc/grid-security/xrd/tls.crt
          cp /etc/grid-security/tls-secrets/tls.key /etc/grid-security/xrd/tls.key
          chmod 600 /etc/grid-security/xrd/tls.key
          chown 1000 /etc/grid-security/xrd/tls.key /etc/grid-security/xrd/tls.crt
          ls -al /data
        securityContext:
          # run as privileged for completing the initialisation step above successfully.
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
        - name: grid-certs
          mountPath: /etc/grid-security/certificates/
        - name: xrootd-data
          mountPath: /data
        - name: xrootd-http-config
          mountPath: /etc/xrootd/
        - name: spool-dir
          mountPath: /var/spool/xrootd
        - name: run-dir
          mountPath: /run/xrootd
        - name: tls-secrets
          mountPath: /etc/grid-security/tls-secrets/
        - name: tls-certs
          mountPath: /etc/grid-security/xrd/

      containers:
      - name: xrootd
        image: rucio/xrootd:latest
        command: ["/usr/bin/xrootd"]
        args: ["-c", "/etc/xrootd/xrootd-http.cfg", "-k", "fifo", "-s", "/run/xrootd/xrootd-http.pid", "-n", "http"]
        ports:
        - containerPort: 1094 # http and xrootd port
        securityContext:
          runAsUser: 1000        # Run as non-root user
          runAsGroup: 1000       # Run as non-root group
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: xrootd-http-config
          mountPath: /etc/xrootd/
        - name: grid-certs
          mountPath: /etc/grid-security/certificates/
          readOnly: true
        - name: xrootd-data
          mountPath: /data
        - name: spool-dir
          mountPath: /var/spool/xrootd
        - name: run-dir
          mountPath: /run/xrootd
        - name: tls-certs
          mountPath: /etc/grid-security/xrd/
          readOnly: true
      volumes:
      - name: xrootd-http-config
        configMap:
          name: xrootd-http-config
      - name: grid-certs
        emptyDir: {}
      - name: xrootd-data
        persistentVolumeClaim:
          claimName: xrootd-data-pvc
      - name: spool-dir
        emptyDir: {}
      - name: run-dir
        emptyDir: {}
      - name: tls-certs
        emptyDir: {}
      - name: tls-secrets
        secret:
          secretName: xrootd-cert
          defaultMode: 256 # 256 decimal = 0400 octal