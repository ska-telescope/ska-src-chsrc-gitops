apiVersion: v1
kind: ServiceAccount
metadata:
  name: skach-external-dns
  namespace: skach-external-dns
---
# This is the CRB that external-dns needs for Vault access to secrets.
# There's an additional CRB in a separate file, which contains
# the permissions needed for external-dns to function correctly.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: skach-external-dns-vault-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: skach-external-dns
  namespace: skach-external-dns
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: skach-external-dns
  namespace: skach-external-dns
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
      path: "app"
      version: "v2"
      auth:
        kubernetes:
          # Path where the Kubernetes authentication backend is mounted in Vault
          mountPath: "kubernetes"
          # A required field containing the Vault Role to assume.
          role: "external-dns"
          # Optional service account field containing the name
          # of a kubernetes ServiceAccount
          serviceAccountRef:
            name: "skach-external-dns"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: skach-external-dns
  namespace: skach-external-dns
spec:
  refreshInterval: "15s" # time to sync from vault
  secretStoreRef:
    name: skach-external-dns
    kind: SecretStore
  target:
    name: gandi-api-key
    creationPolicy: Owner # create secret if not exists
  data:
    - secretKey: gandi-externaldns-key
      remoteRef:
        key: app/data/external-dns # path to secret in vault
        property: gandi-externaldns-key # key in the vault secret