image:
  name: ubuntu:latest
  entrypoint: [""]

variables:
  KUBECONFORM: "https://github.com/yannh/kubeconform/releases/download/v0.6.6/kubeconform-linux-amd64.tar.gz"
  ARGOCD_CRDS: "https://raw.githubusercontent.com/argoproj/argo-cd/master/manifests/crds"

stages:
  - kubeconform
  - build
  - deploy
  - cleanup

kubeconform:
  stage: kubeconform

  before_script:
    - apt-get -y update && apt-get -y install curl
    - curl -L -O $KUBECONFORM && tar xf kubeconform-linux-amd64.tar.gz
    - mkdir -p .schemas/argocd-crd
    - |
      for crd in $(curl -s https://api.github.com/repos/argoproj/argo-cd/contents/manifests/crds | grep 'download_url' | cut -d '"' -f 4); do
        curl -L -o .schemas/argocd-crd/$(basename $crd) $crd;
      done

  script:
    # concatenate all scraping targets into one scrape config
    - cat targets/*.yaml > targets/additional-scrape-configs.yaml

    # run cubeconform validation
    - |
      ./kubeconform \
      -summary \
      -ignore-filename-pattern "^[.]|values.yaml$|values-dev.yaml$|mkdocs.yml|-patch.yaml$|^public/|^docs/" \
      -ignore-missing-schemas \
      -schema-location default \
      -schema-location './.schemas/argocd-crd/{{ .ResourceKind }}{{ .KindSuffix }}.yaml' \
      -schema-location https://raw.githubusercontent.com/kubernetes/kubernetes/v1.29.0/api/openapi-spec/v3/apis__apiextensions.k8s.io__v1_openapi.json \
      -kubernetes-version 1.29.0 .

# The docs build job translates markdown to static html pages 
docs:
  image: python:3.11-alpine
  stage: build
  only:
    changes:
      - docs/**/*
      - mkdocs.yml
      - .gitlab-ci.yml
  script:
    - apk add --no-cache git
    - pip3 install mkdocs mkdocs-material mkdocs-glightbox mkdocs-literate-nav mkdocs-git-revision-date-localized-plugin
    - mkdocs build --strict -d site
  artifacts:
    paths:
      - site

# Normally GitLab allows only one page per project.
# However we would like to have live previews for every branch that rebuilds the docs.
# Workaround:
# By defining the public dir as a cache, it will be preserved between builds.
# This ensures that we can deploy more than one page
# (will need to append the branch name to the gitlab-managed url)
cache:
  key: docs
  paths:
    - public

# Pages job to deploy to GitLab Pages
pages:
  image: python:3.11-alpine
  stage: deploy
  only:
    changes:
      - docs/**/*
      - mkdocs.yml
      - .gitlab-ci.yml
  script:
    # public/ will be cached between pipelines/jobs, so copy the site over
    # to the directory corresponding to the branch name.
    - mkdir -p public/$CI_COMMIT_REF_SLUG
    - cp -r site/* public/$CI_COMMIT_REF_SLUG
    - echo "Deployed pages for $CI_COMMIT_REF_SLUG"
  artifacts:
    paths:
      - public
#  only:
#    - main
